import * as React from "react"
import readable from 'readable-numbers';

const STROKE_COLOR = 'rgba(0,0,0,0.5)';
const STROKE_WIDTH = 4;
const HEXES = [
  ({ color, label }, index) => (<g transform="translate(4.0 -1.0)" key={`hexrow-${index}`}>
    <g transform="translate(51.0 0.0)">
      <g clipPath="url(#i1)">
        <polygon
          points="3.5503268,1.23760431 49.4496732,1.23760431 49.4496732,51.7623957 3.5503268,51.7623957 3.5503268,1.23760431"
          stroke="none"
          fill={color}
        />
        <path
          d="M30.5,2.30940108 L45.4496732,10.9405989 C47.9248818,12.3696613 49.4496732,15.0106774 49.4496732,17.8688022 L49.4496732,35.1311978 C49.4496732,37.9893226 47.9248818,40.6303387 45.4496732,42.0594011 L30.5,50.6905989 C28.0247914,52.1196613 24.9752086,52.1196613 22.5,50.6905989 L7.5503268,42.0594011 C5.07511819,40.6303387 3.5503268,37.9893226 3.5503268,35.1311978 L3.5503268,17.8688022 C3.5503268,15.0106774 5.07511819,12.3696613 7.5503268,10.9405989 L22.5,2.30940108 C24.9752086,0.880338717 28.0247914,0.880338717 30.5,2.30940108 Z"
          stroke="#000000"
          strokeWidth={STROKE_WIDTH}
          fill="none"
          strokeMiterlimit={5}
        />
      </g>
    </g>
    <g transform="translate(0.0 20.0)">
      <text
        transform="translate(-20 11.0)" className="value-label"
        fill="#000000"
        textAnchor="right"
        x="45"
      >
        {readable(label, 1)}
      </text>

    </g>
  </g>),

  ({ color, label }, index) => (<g transform="translate(103.0 -1.0)" key={`hexrow-${index}`}>
    <g clipPath="url(#i1)">
      <polygon
        points="3.5503268,1.23760431 49.4496732,1.23760431 49.4496732,51.7623957 3.5503268,51.7623957 3.5503268,1.23760431"
        stroke="none"
        fill={color}
      />
      <path
        d="M30.5,2.30940108 L45.4496732,10.9405989 C47.9248818,12.3696613 49.4496732,15.0106774 49.4496732,17.8688022 L49.4496732,35.1311978 C49.4496732,37.9893226 47.9248818,40.6303387 45.4496732,42.0594011 L30.5,50.6905989 C28.0247914,52.1196613 24.9752086,52.1196613 22.5,50.6905989 L7.5503268,42.0594011 C5.07511819,40.6303387 3.5503268,37.9893226 3.5503268,35.1311978 L3.5503268,17.8688022 C3.5503268,15.0106774 5.07511819,12.3696613 7.5503268,10.9405989 L22.5,2.30940108 C24.9752086,0.880338717 28.0247914,0.880338717 30.5,2.30940108 Z"
        stroke={STROKE_COLOR}
        strokeWidth={STROKE_WIDTH}
        fill="none"
        strokeMiterlimit={5}
      />
    </g>
    <g transform="translate(53.0 20.0)">
      <text
        transform="translate(0.0 11.0)"
        className="value-label"
        fill="#000000"
        textAnchor="left"
      >
        {readable(label, 1)}
      </text>
    </g>
  </g>),
  ({ color, label }, index) => (<g transform="translate(30.0 40.0)" key={`hexrow-${index}`}>
    <g transform="translate(49.0 0.0)">
      <g clipPath="url(#i1)">
        <polygon
          points="3.5503268,1.23760431 49.4496732,1.23760431 49.4496732,51.7623957 3.5503268,51.7623957 3.5503268,1.23760431"
          stroke="none"
          fill={color}
        />
        <path
          d="M30.5,2.30940108 L45.4496732,10.9405989 C47.9248818,12.3696613 49.4496732,15.0106774 49.4496732,17.8688022 L49.4496732,35.1311978 C49.4496732,37.9893226 47.9248818,40.6303387 45.4496732,42.0594011 L30.5,50.6905989 C28.0247914,52.1196613 24.9752086,52.1196613 22.5,50.6905989 L7.5503268,42.0594011 C5.07511819,40.6303387 3.5503268,37.9893226 3.5503268,35.1311978 L3.5503268,17.8688022 C3.5503268,15.0106774 5.07511819,12.3696613 7.5503268,10.9405989 L22.5,2.30940108 C24.9752086,0.880338717 28.0247914,0.880338717 30.5,2.30940108 Z"
          stroke={STROKE_COLOR}
          strokeWidth={STROKE_WIDTH}
          fill="none"
          strokeMiterlimit={5}
        />
      </g>
    </g>
    <g transform="translate(0.0 20.0)">
      <text
        transform="translate(-25 11.0)"
        className="value-label"
        fill="#000000"
        textAnchor="right"
        x="47"
      >
        {readable(label, 1)}
      </text>
    </g>
  </g>),
  ({ color, label }, index) => (<g transform="translate(127.0 40.0)"  key={`hexrow-${index}`}>
    <g clipPath="url(#i1)">
      <polygon
        points="3.5503268,1.23760431 49.4496732,1.23760431 49.4496732,51.7623957 3.5503268,51.7623957 3.5503268,1.23760431"
        stroke="none"
        fill={color}
      />
      <path
        d="M30.5,2.30940108 L45.4496732,10.9405989 C47.9248818,12.3696613 49.4496732,15.0106774 49.4496732,17.8688022 L49.4496732,35.1311978 C49.4496732,37.9893226 47.9248818,40.6303387 45.4496732,42.0594011 L30.5,50.6905989 C28.0247914,52.1196613 24.9752086,52.1196613 22.5,50.6905989 L7.5503268,42.0594011 C5.07511819,40.6303387 3.5503268,37.9893226 3.5503268,35.1311978 L3.5503268,17.8688022 C3.5503268,15.0106774 5.07511819,12.3696613 7.5503268,10.9405989 L22.5,2.30940108 C24.9752086,0.880338717 28.0247914,0.880338717 30.5,2.30940108 Z"
        stroke={STROKE_COLOR}
        strokeWidth={STROKE_WIDTH}
        fill="none"
        strokeMiterlimit={5}
      />
    </g>
    <g transform="translate(53.0 20.0)">
      <text
        transform="translate(0.0 11.0)"
        className="value-label"
        fill="#000000"
        textAnchor="left"
      >
        {readable(label, 1)}
      </text>
    </g>
  </g>)
];

const ValueSeries = (props) => {
  const { values } = props;
  const height = Math.min(92 * values.length, window.innerHeight - 70);
  return (
    <svg
      width="231px"
      height={`${height}px`}
      viewBox={`0 0 231.0 ${height}`}
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
    >
      <defs>
        <clipPath id="i0">
          <path d="M178,0 L178,92 L0,92 L0,0 L178,0 Z"/>
        </clipPath>
        <clipPath id="i1">
          <path
            d="M30.5,2.30940108 L45.4496732,10.9405989 C47.9248818,12.3696613 49.4496732,15.0106774 49.4496732,17.8688022 L49.4496732,35.1311978 C49.4496732,37.9893226 47.9248818,40.6303387 45.4496732,42.0594011 L30.5,50.6905989 C28.0247914,52.1196613 24.9752086,52.1196613 22.5,50.6905989 L7.5503268,42.0594011 C5.07511819,40.6303387 3.5503268,37.9893226 3.5503268,35.1311978 L3.5503268,17.8688022 C3.5503268,15.0106774 5.07511819,12.3696613 7.5503268,10.9405989 L22.5,2.30940108 C24.9752086,0.880338717 28.0247914,0.880338717 30.5,2.30940108 Z"/>
        </clipPath>
      </defs>
      <g>
        {
          values.map((series, i) => {
            return (<g key={i} transform={`translate(0 ${i * 83})`}>
              {series.map((data, d) => HEXES[d](data, d))}
            </g>)
          })
        }
      </g>
    </svg>
  );
}

export default ValueSeries
